version: '3.8'

services:
  # Base de donn√©es MongoDB
  mongodb:
    image: mongo:7-jammy
    container_name: cesi-zen-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-cesi-zen}
    command: mongod --bind_ip_all
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - cesi-zen-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./cesi-zen-code/backend-ts
      dockerfile: Dockerfile
    container_name: cesi-zen-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: ${BACKEND_PORT:-5001}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-cesi_zen}?authSource=admin
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001}
    ports:
      - "${BACKEND_PORT:-5001}:5001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - cesi-zen-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Next.js
  frontend:
    build:
      context: ./cesi-zen-code/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    container_name: cesi-zen-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: ${FRONTEND_PORT:-3000}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    ports:
      - "${FRONTEND_PORT:-3001}:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - cesi-zen-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Interface web pour MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: cesi-zen-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - cesi-zen-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  cesi-zen-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 