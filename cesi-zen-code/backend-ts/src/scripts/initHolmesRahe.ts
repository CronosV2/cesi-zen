import mongoose from 'mongoose';
import dotenv from 'dotenv';
import path from 'path';
import HolmesRaheEvent from '../models/HolmesRaheEvent';

// Configuration dotenv
dotenv.config({ path: path.join(__dirname, '../../.env') });

// √âv√©nements de l'√©chelle Holmes-Rahe officiels
const holmesRaheEvents = [
  // Famille (Family)
  {
    name: 'D√©c√®s du conjoint',
    description: 'Perte de son √©poux/√©pouse',
    points: 100,
    category: 'family'
  },
  {
    name: 'Divorce',
    description: 'S√©paration l√©gale d√©finitive',
    points: 73,
    category: 'family'
  },
  {
    name: 'S√©paration conjugale',
    description: 'S√©paration temporaire ou permanente du conjoint',
    points: 65,
    category: 'family'
  },
  {
    name: 'Mariage',
    description: 'Union matrimoniale',
    points: 50,
    category: 'family'
  },
  {
    name: 'R√©conciliation conjugale',
    description: 'Retour avec le conjoint apr√®s s√©paration',
    points: 45,
    category: 'family'
  },
  {
    name: 'D√©c√®s d\'un proche',
    description: 'Mort d\'un membre de la famille proche',
    points: 63,
    category: 'family'
  },
  {
    name: 'Ajout d\'un nouveau membre dans la famille',
    description: 'Naissance, adoption, emm√©nagement d\'un parent √¢g√©',
    points: 39,
    category: 'family'
  },
  {
    name: 'Probl√®mes avec les beaux-parents',
    description: 'Difficult√©s relationnelles avec la belle-famille',
    points: 29,
    category: 'family'
  },
  {
    name: 'D√©part d\'un membre de la famille',
    description: 'Enfant qui quitte le foyer, divorce d\'un proche',
    points: 29,
    category: 'family'
  },

  // Personnel (Personal)
  {
    name: 'Emprisonnement',
    description: 'Incarc√©ration ou d√©tention',
    points: 63,
    category: 'personal'
  },
  {
    name: 'Blessure ou maladie personnelle',
    description: 'Probl√®me de sant√© physique ou mentale important',
    points: 53,
    category: 'personal'
  },
  {
    name: 'Changement dans les habitudes de sommeil',
    description: 'Modification significative des heures de sommeil',
    points: 16,
    category: 'personal'
  },
  {
    name: 'Changement dans les habitudes alimentaires',
    description: 'Modification du r√©gime alimentaire ou des horaires de repas',
    points: 15,
    category: 'personal'
  },
  {
    name: 'Changement d\'activit√©s sociales',
    description: 'Modification des loisirs, clubs, activit√©s de groupe',
    points: 18,
    category: 'personal'
  },
  {
    name: 'Changement d\'activit√©s religieuses',
    description: 'Modification de la pratique religieuse',
    points: 19,
    category: 'personal'
  },
  {
    name: 'Changement dans les habitudes personnelles',
    description: 'Modification de l\'apparence, du style de vie, des routines',
    points: 24,
    category: 'personal'
  },

  // Travail (Work)
  {
    name: 'Licenciement',
    description: 'Perte d\'emploi involontaire',
    points: 47,
    category: 'work'
  },
  {
    name: 'Retraite',
    description: 'Cessation d\'activit√© professionnelle',
    points: 45,
    category: 'work'
  },
  {
    name: 'Changement de responsabilit√©s au travail',
    description: 'Promotion, r√©trogradation, changement de poste',
    points: 29,
    category: 'work'
  },
  {
    name: 'Changement des conditions de travail',
    description: 'Horaires, lieu de travail, coll√®gues, etc.',
    points: 20,
    category: 'work'
  },
  {
    name: 'Probl√®mes avec le patron',
    description: 'Difficult√©s relationnelles avec la hi√©rarchie',
    points: 23,
    category: 'work'
  },
  {
    name: 'D√©but ou fin d\'√©tudes',
    description: 'Entr√©e √† l\'universit√©, obtention d\'un dipl√¥me',
    points: 26,
    category: 'work'
  },

  // Finances (Financial)
  {
    name: 'Difficult√©s financi√®res majeures',
    description: 'Probl√®mes d\'argent importants, faillite',
    points: 38,
    category: 'financial'
  },
  {
    name: 'Changement de situation financi√®re',
    description: 'Am√©lioration ou d√©t√©rioration significative des revenus',
    points: 38,
    category: 'financial'
  },
  {
    name: 'Pr√™t hypoth√©caire important',
    description: 'Achat d\'une maison, gros emprunt immobilier',
    points: 31,
    category: 'financial'
  },
  {
    name: 'Saisie d\'un bien',
    description: 'Perte d\'un bien par saisie l√©gale',
    points: 30,
    category: 'financial'
  },
  {
    name: 'Pr√™t personnel important',
    description: 'Emprunt significatif pour voiture, √©tudes, etc.',
    points: 17,
    category: 'financial'
  },

  // Sant√© (Health)
  {
    name: 'Grossesse',
    description: 'Attente d\'un enfant',
    points: 40,
    category: 'health'
  },
  {
    name: 'Probl√®mes sexuels',
    description: 'Difficult√©s dans la vie intime',
    points: 39,
    category: 'health'
  },
  {
    name: 'R√©vision des habitudes personnelles',
    description: 'Remise en question de son mode de vie',
    points: 24,
    category: 'health'
  },

  // Social (Social)
  {
    name: 'D√©m√©nagement',
    description: 'Changement de domicile',
    points: 20,
    category: 'social'
  },
  {
    name: 'Changement d\'√©cole',
    description: 'Nouveau √©tablissement scolaire',
    points: 20,
    category: 'social'
  },
  {
    name: 'Probl√®mes avec la loi',
    description: 'Infractions mineures, contraventions, proc√®s',
    points: 11,
    category: 'social'
  },
  {
    name: 'R√©alisation personnelle remarquable',
    description: 'Succ√®s important, reconnaissance publique',
    points: 28,
    category: 'social'
  },
  {
    name: 'Vacances',
    description: 'P√©riode de cong√©s, voyage de d√©tente',
    points: 13,
    category: 'social'
  },
  {
    name: 'F√™tes de fin d\'ann√©e',
    description: 'P√©riode des f√™tes (No√´l, Nouvel An)',
    points: 12,
    category: 'social'
  }
];

const initHolmesRaheEvents = async (): Promise<void> => {
  try {
    // Connexion √† MongoDB
    const mongoURI = process.env.MONGODB_URI;
    if (!mongoURI) {
      throw new Error('MONGODB_URI not defined in environment variables');
    }
    
    await mongoose.connect(mongoURI);
    console.log('‚úÖ Connexion MongoDB √©tablie');

    // V√©rifier si les √©v√©nements existent d√©j√†
    const existingCount = await HolmesRaheEvent.countDocuments();
    
    if (existingCount > 0) {
      console.log(`‚ö†Ô∏è  ${existingCount} √©v√©nements Holmes-Rahe d√©j√† pr√©sents dans la base`);
      console.log('Voulez-vous supprimer et recr√©er tous les √©v√©nements? (Ctrl+C pour annuler)');
      
      // Attendre 3 secondes puis continuer
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      // Supprimer tous les √©v√©nements existants
      await HolmesRaheEvent.deleteMany({});
      console.log('üóëÔ∏è  √âv√©nements existants supprim√©s');
    }

    // Ins√©rer tous les √©v√©nements
    const insertedEvents = await HolmesRaheEvent.insertMany(holmesRaheEvents);
    
    console.log(`‚úÖ ${insertedEvents.length} √©v√©nements Holmes-Rahe cr√©√©s avec succ√®s`);
    
    // Afficher un r√©sum√© par cat√©gorie
    const categories = await HolmesRaheEvent.aggregate([
      { $group: { _id: '$category', count: { $sum: 1 }, totalPoints: { $sum: '$points' } } },
      { $sort: { _id: 1 } }
    ]);
    
    console.log('\nüìä R√©sum√© par cat√©gorie:');
    categories.forEach(cat => {
      const categoryLabels: { [key: string]: string } = {
        family: 'Famille',
        personal: 'Personnel',
        work: 'Travail',
        financial: 'Finances',
        health: 'Sant√©',
        social: 'Social'
      };
      console.log(`   ${categoryLabels[cat._id] || cat._id}: ${cat.count} √©v√©nements (${cat.totalPoints} points max)`);
    });

    console.log('\nüéØ √âchelle de risque:');
    console.log('   üü¢ Faible risque: < 150 points');
    console.log('   üü° Risque mod√©r√©: 150-299 points');
    console.log('   üî¥ Risque √©lev√©: ‚â• 300 points');

  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Connexion MongoDB ferm√©e');
    process.exit(0);
  }
};

// Ex√©cuter le script
if (require.main === module) {
  console.log('üöÄ Initialisation des √©v√©nements Holmes-Rahe...\n');
  initHolmesRaheEvents();
}

export default initHolmesRaheEvents; 